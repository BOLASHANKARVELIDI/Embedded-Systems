CCS PCM C Compiler, Version 5.008, 5967               26-Jun-22 12:01

               Filename:   C:\Users\BOLA SHANKAR\OneDrive\Desktop\Embedded Training\TASK-1\SENSOR TYPE1.lst

               ROM used:   201 words (2%)
                           Largest free fragment is 2048
               RAM used:   17 (5%) at main() level
                           23 (6%) worst case
               Stack used: 3 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   042
0003:  NOP
.................... #include <SENSOR TYPE.h> 
.................... #include <16F877A.h> 
.................... //////// Standard Header file for the PIC16F877A device //////////////// 
.................... #device PIC16F877A 
....................  
.................... #list 
....................  
.................... #device ADC=16 
....................  
.................... #FUSES NOWDT                 	//No Watch Dog Timer 
.................... #FUSES NOBROWNOUT            	//No brownout reset 
.................... #FUSES NOLVP                 	//No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
....................  
.................... #use delay(crystal=20MHz) 
0004:  MOVLW  31
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   017
000A:  MOVLW  06
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  7B
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  DECFSZ 00,F
0016:  GOTO   00A
0017:  RETURN
....................  
....................  
....................  
.................... #byte LCD=0x08 
.................... #byte TLCD=0x88 
....................  
.................... #bit RS=0x07.6 
.................... #bit TRS=0x87.6 
....................  
.................... #bit EN=0x07.7 
.................... #bit TEN=0x87.7 
....................  
.................... #bit SW1=0x07.0 
.................... #bit TSW1=0x87.0 
.................... #bit SW2=0x07.1 
.................... #bit TSW2=0x87.1 
....................  
.................... #bit LED1=0x06.0 
.................... #bit TLED1=0x86.0 
.................... #bit LED2=0x06.1 
.................... #bit TLED2=0x86.1 
....................  
.................... #bit LED3=0x06.2 
.................... #bit TLED3=0x86.2 
.................... #bit LED4=0x06.3 
.................... #bit TLED4=0x86.3 
....................  
.................... char str[10]="COUNT : "; 
*
004E:  MOVLW  43
004F:  BCF    03.5
0050:  MOVWF  20
0051:  MOVLW  4F
0052:  MOVWF  21
0053:  MOVLW  55
0054:  MOVWF  22
0055:  MOVLW  4E
0056:  MOVWF  23
0057:  MOVLW  54
0058:  MOVWF  24
0059:  MOVLW  20
005A:  MOVWF  25
005B:  MOVLW  3A
005C:  MOVWF  26
005D:  MOVLW  20
005E:  MOVWF  27
005F:  CLRF   28
.................... int count=0; 
.................... VOID display(unsigned int A,unsigned int B) 
.................... { 
.................... LCD=A; 
*
0018:  MOVF   2F,W
0019:  MOVWF  08
.................... RS=B; 
001A:  BTFSS  30.0
001B:  BCF    07.6
001C:  BTFSC  30.0
001D:  BSF    07.6
.................... EN=1; 
001E:  BSF    07.7
.................... delay_ms(200); 
001F:  MOVLW  C8
0020:  MOVWF  31
0021:  CALL   004
.................... EN=0; 
0022:  BCF    07.7
0023:  RETURN
.................... } 
.................... void display_string(char *str) 
.................... { 
.................... for(int j=0;str[j]!=0;j++) 
0024:  CLRF   2D
0025:  MOVF   2D,W
0026:  ADDWF  2B,W
0027:  MOVWF  04
0028:  BCF    03.7
0029:  BTFSC  2C.0
002A:  BSF    03.7
002B:  MOVF   00,F
002C:  BTFSC  03.2
002D:  GOTO   03F
.................... { 
.................... display(str[j],1); 
002E:  MOVF   2D,W
002F:  ADDWF  2B,W
0030:  MOVWF  04
0031:  BCF    03.7
0032:  BTFSC  2C.0
0033:  BSF    03.7
0034:  MOVF   00,W
0035:  MOVWF  2E
0036:  MOVWF  2F
0037:  MOVLW  01
0038:  MOVWF  30
0039:  CALL   018
.................... delay_ms(200); 
003A:  MOVLW  C8
003B:  MOVWF  31
003C:  CALL   004
003D:  INCF   2D,F
003E:  GOTO   025
.................... } 
003F:  BCF    0A.3
0040:  BCF    0A.4
0041:  GOTO   094 (RETURN)
.................... } 
.................... void main() 
0042:  MOVF   03,W
0043:  ANDLW  1F
0044:  MOVWF  03
0045:  CLRF   2A
0046:  BSF    03.5
0047:  BSF    1F.0
0048:  BSF    1F.1
0049:  BSF    1F.2
004A:  BCF    1F.3
004B:  MOVLW  07
004C:  MOVWF  1C
004D:  BCF    03.7
.................... { 
.................... SW1=0; 
*
0060:  BCF    07.0
.................... TSW1=1; 
0061:  BSF    03.5
0062:  BSF    07.0
.................... SW2=0; 
0063:  BCF    03.5
0064:  BCF    07.1
.................... TSW2=1; 
0065:  BSF    03.5
0066:  BSF    07.1
.................... LCD=0; 
0067:  BCF    03.5
0068:  CLRF   08
.................... TLCD=0; 
0069:  BSF    03.5
006A:  CLRF   08
.................... RS=0; 
006B:  BCF    03.5
006C:  BCF    07.6
.................... TRS=0; 
006D:  BSF    03.5
006E:  BCF    07.6
.................... EN=0; 
006F:  BCF    03.5
0070:  BCF    07.7
.................... TEN=0; 
0071:  BSF    03.5
0072:  BCF    07.7
....................  
.................... LED1=0; 
0073:  BCF    03.5
0074:  BCF    06.0
.................... TLED1=0; 
0075:  BSF    03.5
0076:  BCF    06.0
.................... LED2=0; 
0077:  BCF    03.5
0078:  BCF    06.1
.................... TLED2=0; 
0079:  BSF    03.5
007A:  BCF    06.1
....................  
.................... LED3=0; 
007B:  BCF    03.5
007C:  BCF    06.2
.................... TLED3=0; 
007D:  BSF    03.5
007E:  BCF    06.2
.................... LED4=0; 
007F:  BCF    03.5
0080:  BCF    06.3
.................... TLED4=0; 
0081:  BSF    03.5
0082:  BCF    06.3
....................  
.................... display(0x0c,0); 
0083:  MOVLW  0C
0084:  BCF    03.5
0085:  MOVWF  2F
0086:  CLRF   30
0087:  CALL   018
.................... display(0x38,0); 
0088:  MOVLW  38
0089:  MOVWF  2F
008A:  CLRF   30
008B:  CALL   018
....................    while(TRUE) 
....................    { 
....................       display(0X80,0); 
008C:  MOVLW  80
008D:  MOVWF  2F
008E:  CLRF   30
008F:  CALL   018
....................       display_string(str); 
0090:  CLRF   2C
0091:  MOVLW  20
0092:  MOVWF  2B
0093:  GOTO   024
....................       if(SW1==1) 
0094:  BTFSS  07.0
0095:  GOTO   09A
....................       { 
....................       while(SW1==1); 
0096:  BTFSC  07.0
0097:  GOTO   096
....................       count+=1; 
0098:  MOVLW  01
0099:  ADDWF  2A,F
....................       } 
....................       if(SW2==1) 
009A:  BTFSS  07.1
009B:  GOTO   0A0
....................       { 
....................          while(SW2==1); 
009C:  BTFSC  07.1
009D:  GOTO   09C
....................       count-=1; 
009E:  MOVLW  01
009F:  SUBWF  2A,F
....................       } 
....................       display(0x89,0); 
00A0:  MOVLW  89
00A1:  MOVWF  2F
00A2:  CLRF   30
00A3:  CALL   018
....................       display(count+0x30,1); 
00A4:  MOVLW  30
00A5:  ADDWF  2A,W
00A6:  MOVWF  2B
00A7:  MOVWF  2F
00A8:  MOVLW  01
00A9:  MOVWF  30
00AA:  CALL   018
....................        
....................       if(count>=1) 
00AB:  MOVF   2A,W
00AC:  SUBLW  00
00AD:  BTFSC  03.0
00AE:  GOTO   0B1
....................       { 
....................       LED1=1; 
00AF:  BSF    06.0
....................       } 
00B0:  GOTO   0B2
....................       else 
....................       { 
....................       LED1=0; 
00B1:  BCF    06.0
....................       } 
....................       if(count>=5) 
00B2:  MOVF   2A,W
00B3:  SUBLW  04
00B4:  BTFSC  03.0
00B5:  GOTO   0B8
....................       { 
....................       LED2=1; 
00B6:  BSF    06.1
....................       } 
00B7:  GOTO   0B9
....................       else 
....................       { 
....................       LED2=0; 
00B8:  BCF    06.1
....................       } 
....................       if(count>=8) 
00B9:  MOVF   2A,W
00BA:  SUBLW  07
00BB:  BTFSC  03.0
00BC:  GOTO   0BF
....................       { 
....................       LED3=1; 
00BD:  BSF    06.2
....................       } 
00BE:  GOTO   0C0
....................       else 
....................       { 
....................       LED3=0; 
00BF:  BCF    06.2
....................       } 
....................       if(count>9) 
00C0:  MOVF   2A,W
00C1:  SUBLW  09
00C2:  BTFSC  03.0
00C3:  GOTO   0C6
....................       { 
....................       LED4=1; 
00C4:  BSF    06.3
....................       } 
00C5:  GOTO   0C7
....................       else 
....................       { 
....................       LED4=0; 
00C6:  BCF    06.3
....................       } 
00C7:  GOTO   08C
....................        
....................     } 
.................... } 
00C8:  SLEEP

Configuration Fuses:
   Word  1: 3F32   HS NOWDT PUT NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
